plugins {
    alias libs.plugins.loom
    id "maven-publish"
    alias libs.plugins.kotlin
    alias libs.plugins.kotlin.serialization
    alias libs.plugins.nexus.publish
    alias libs.plugins.loom.quiltflower
}


def total_version = "$mod_version-$minecraft_version"

archivesBaseName = project.archives_base_name
version = total_version
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/fabricdrawer.accessWidener")
}


java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
    withSourcesJar()
    withJavadocJar()
}

kotlin {
    explicitApi()
}


dependencies {
    //to change the versions see the gradle.properties file
    minecraft libs.minecraft
    mappings "net.fabricmc:yarn:${libs.versions.yarn.mappings.get()}:v2"
    modImplementation libs.fabric.loader
    modImplementation libs.flk
    modImplementation libs.fabric.api
    testImplementation libs.kotlin.test
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}


test {
    useJUnitPlatform()
}


Properties properties = new Properties()
File propertiesFile = new File('gradle.properties')
propertiesFile.withInputStream {
    properties.load(it)
}
properties.put("total_version",total_version)




task updateTemplate(type: Copy) {
    group = "template"
    description = "Switches out variables like \$total_version in .template.md files, and copies the results into .md files."
    from(rootDir)
    include("**/*.template.md")
    filesMatching("**/*.template.md") {
        def extensionLength = ".template.md".length()

        name = sourceName.substring(0, sourceName.length() - extensionLength) + ".md"
        expand(properties)
    }
    destinationDir = rootDir
}

apply from: "${rootDir}/scripts/publish-root.gradle"

ext {
    PUBLISH_VERSION = total_version
}

apply from: "${rootProject.projectDir}/scripts/publish-module.gradle"

afterEvaluate {
    publishReleasePublicationToSonatypeRepository.dependsOn updateTemplate
}

